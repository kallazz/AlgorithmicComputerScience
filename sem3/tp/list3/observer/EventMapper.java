/**
 * Copyright 2011 Joao Miguel Pereira
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package eu.jpereira.trainings.designpatterns.behavioral.observer.mapper;

import eu.jpereira.trainings.designpatterns.behavioral.observer.event.EventData;
import eu.jpereira.trainings.designpatterns.behavioral.observer.observers.ApplianceEventObservable;

/**
 * Interface for mappers in the chain
 * @author jpereira
 * 
 * 
 * TODO Exercise: extend from {@link ApplianceEventObservable}
 */
public interface EventMapper extends ApplianceEventObservable {
	
	/**
	 * Handles the mapping process
	 * @param data The data of the event
	 * @param event The Event generated by previous mapper, if any. Can be null
	 * @param chain The chain of mappers
	 */
	void doMap(EventData data, MapperChain chain);
}
